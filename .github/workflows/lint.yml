name: Code Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint flake8 mypy black isort
    
    - name: Run Black (Code Formatter Check)
      run: |
        black --check --diff renzmc/
      continue-on-error: true
    
    - name: Run isort (Import Sorting Check)
      run: |
        isort --check-only --diff renzmc/
      continue-on-error: true
    
    - name: Run Flake8 (Style Guide Enforcement)
      run: |
        flake8 renzmc/ --count --statistics --max-line-length=100
      continue-on-error: true
    
    - name: Run Pylint (Code Analysis)
      run: |
        pylint renzmc/ --exit-zero --output-format=text --reports=y
    
    - name: Run MyPy (Type Checking)
      run: |
        mypy renzmc/ --ignore-missing-imports --no-strict-optional
      continue-on-error: true
    
    - name: Generate Lint Report
      if: always()
      run: |
        echo "## Lint Report for Python ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Flake8 Results" >> $GITHUB_STEP_SUMMARY
        flake8 renzmc/ --count --statistics --max-line-length=100 >> $GITHUB_STEP_SUMMARY || true
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Pylint Score" >> $GITHUB_STEP_SUMMARY
        pylint renzmc/ --exit-zero | tail -2 >> $GITHUB_STEP_SUMMARY || true

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run Bandit (Security Linter)
      run: |
        bandit -r renzmc/ -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Run Safety (Dependency Security Check)
      run: |
        safety check --json
      continue-on-error: true
    
    - name: Upload Security Reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json